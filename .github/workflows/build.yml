name: Build site

on: [push, pull_request]
env:
  owner: ArendJan #mirte-robot
  releases: 'test_tag_aj3' # releases to download from the github releases page as they probably don't compile anymore (ros1->ros2). comma separated list

jobs:
  build:
    
    runs-on: ubuntu-latest
    container:
      image: althack/ros:noetic-dev
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-tags: true
          set-safe-directory: true
      - name: get tags
        run: |
          git config --global --add safe.directory /__w/mirte-documentation/mirte-documentation
          git fetch --all
          git tag -n
          # remove tags that are in the releases list
          for release in $releases; do
            git tag -d $release || true
            git tag $release
          done
          git tag current # create a current tag for the current commit
          
      - name: Install dependencies
        run: |
          git config --global --add safe.directory /__w/mirte-documentation/mirte-documentation
          . ./build.sh # install dependencies and build the subsystems
          sphinx-multiversion . _build/html_multi
          cp _static/index.html _build/html_multi/index.html # for the redirect to the latest version
      - name: Add old releases
        run: |
          apt update && apt install -y wget unzip
          for release in $releases; do
            # wget https://github.com/$owner/mirte-documentation/releases/download/$release/site.zip
            # get versions html from index.html
            numLinStart=$(grep -in "<\!-- VERSIONS START -->" _build/html_multi/$release/index.html | cut -d':' -f1);
            numLinEnd=$(grep -in "<\!-- VERSIONS END -->" _build/html_multi/$release/index.html | cut -d':' -f1);
            versions_html=$(sed -n "$numLinStart,$numLinEnd p" _build/html_multi/$release/index.html);
            rm -rf _build/html_multi/$release
            
            unzip site.zip -d _build/html_multi/$release
            
            find _build/html_multi/$release -type f -name "*.html" -exec sed -i "s/<\!-- VERSIONS PLACEHOLDER -->/$versions_html/g" {} \;
            rm site.zip 
          done
      - name: Archive site
        run: |
          cd _build/html
          zip -r ../../site.zip . 
          cd ../../
      - name: install nodejs for archive script
        run: |
          curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
          sudo apt-get install -y nodejs        
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            _build/html
      - name: Archive artifacts multi-version
        uses: actions/upload-artifact@v4
        with:
          path: _build/html_multi
          name: html_multiversion
      - name: Archive production artifacts for act
        uses: actions/upload-artifact@v4
        with:
          name: act_dist
          path: |
            site.zip
      - name: Upload as a github-pages artifact
        uses: actions/upload-pages-artifact@v3
        with: 
          path: _build/html_multi

  deploy:
    # Add a dependency to the build job
    needs: build
    if: github.ref == 'refs/heads/main' || github.repository_owner != 'mirte-robot'
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # with:
        #   artifact_name: dist